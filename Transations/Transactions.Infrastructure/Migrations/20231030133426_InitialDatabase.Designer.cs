// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Transactions.Infrastructure.Context;

#nullable disable

namespace Transactions.Infrastructure.Migrations
{
    [DbContext(typeof(TransactionsContext))]
    [Migration("20231030133426_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Transactions.Domain.Observation.Model.Observation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("License")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PotentialObservationId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PotentialObservationId");

                    b.ToTable("Observations");
                });

            modelBuilder.Entity("Transactions.Domain.PotentialObservation.Model.PotentialObservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("PotentialObservations");
                });

            modelBuilder.Entity("Transactions.Domain.Observation.Model.Observation", b =>
                {
                    b.HasOne("Transactions.Domain.PotentialObservation.Model.PotentialObservation", null)
                        .WithMany("Observations")
                        .HasForeignKey("PotentialObservationId");
                });

            modelBuilder.Entity("Transactions.Domain.PotentialObservation.Model.PotentialObservation", b =>
                {
                    b.Navigation("Observations");
                });
#pragma warning restore 612, 618
        }
    }
}
